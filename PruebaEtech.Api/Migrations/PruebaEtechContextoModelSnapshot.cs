// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PruebaEtech.Api.Models.Contexto;

namespace PruebaEtech.Api.Migrations
{
    [DbContext(typeof(PruebaEtechContexto))]
    partial class PruebaEtechContextoModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PruebaEtech.Api.Models.Entidades.Reservacion", b =>
                {
                    b.Property<int>("IdReservacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Asientos")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<int>("IdViaje")
                        .HasColumnType("int");

                    b.Property<int>("IdViajero")
                        .HasColumnType("int");

                    b.HasKey("IdReservacion");

                    b.HasIndex("IdViaje");

                    b.HasIndex("IdViajero");

                    b.ToTable("Reservacion");
                });

            modelBuilder.Entity("PruebaEtech.Api.Models.Entidades.Viaje", b =>
                {
                    b.Property<int>("IdViaje")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CodigoViaje")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Destino")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<int>("LugaresDisponibles")
                        .HasColumnType("int");

                    b.Property<string>("Origen")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Precio")
                        .HasColumnType("int");

                    b.HasKey("IdViaje");

                    b.ToTable("Viaje");
                });

            modelBuilder.Entity("PruebaEtech.Api.Models.Entidades.Viajero", b =>
                {
                    b.Property<int>("IdViajero")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cedula")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("IdViajero");

                    b.ToTable("Viajero");
                });

            modelBuilder.Entity("PruebaEtech.Api.Models.Entidades.Reservacion", b =>
                {
                    b.HasOne("PruebaEtech.Api.Models.Entidades.Viaje", "Viaje")
                        .WithMany("Reservacion")
                        .HasForeignKey("IdViaje")
                        .HasConstraintName("FK_Reservacion_Viaje")
                        .IsRequired();

                    b.HasOne("PruebaEtech.Api.Models.Entidades.Viajero", "Viajero")
                        .WithMany("Reservacion")
                        .HasForeignKey("IdViajero")
                        .HasConstraintName("FK_Reservacion_Viajero")
                        .IsRequired();

                    b.Navigation("Viaje");

                    b.Navigation("Viajero");
                });

            modelBuilder.Entity("PruebaEtech.Api.Models.Entidades.Viaje", b =>
                {
                    b.Navigation("Reservacion");
                });

            modelBuilder.Entity("PruebaEtech.Api.Models.Entidades.Viajero", b =>
                {
                    b.Navigation("Reservacion");
                });
#pragma warning restore 612, 618
        }
    }
}
